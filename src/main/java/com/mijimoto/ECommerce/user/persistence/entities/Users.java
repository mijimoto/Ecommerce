/*
 * Created on 2025-10-24 ( 00:29:57 )
 * Generated by Telosys ( https://www.telosys.org/ ) version 3.3.0
 */

package com.mijimoto.ECommerce.user.persistence.entities;

import java.io.Serializable;
import lombok.Data;
import lombok.NoArgsConstructor;
import java.util.Date;
import java.util.List;

import com.mijimoto.ECommerce.common.persistence.entities.AuditLogs;
import com.mijimoto.ECommerce.customer.persistence.entities.*;
import com.mijimoto.ECommerce.inventory.persistence.entities.*;
import com.mijimoto.ECommerce.order.persistence.entities.*;
import com.mijimoto.ECommerce.order.persistence.entities.*;

import jakarta.persistence.*;

/**
 * JPA entity class for "Users"
 *
 * @author Telosys
 */
@Data
@NoArgsConstructor
@Entity
@Table(name="users", schema="dbo", catalog="EcommerceDB" )
public class Users implements Serializable {

    private static final long serialVersionUID = 1L;

    
    //--- PRIMARY KEY 
    @Id
    @GeneratedValue(strategy=GenerationType.AUTO)
    @Column(name="id", nullable=false)
    private Integer    id;

    //--- OTHER DATA FIELDS 
    @Column(name="email", nullable=false, length=255)
    private String           email    ;

    @Column(name="password_hash", nullable=false, length=255)
    private String           passwordHash    ;

    @Column(name="full_name", length=255)
    private String           fullName    ;

    @Temporal(TemporalType.DATE)
    @Column(name="date_of_birth")
    private Date             dateOfBirth    ;

    @Column(name="gender", length=20)
    private String           gender    ;

    @Column(name="is_active", nullable=false)
    private Boolean          isActive    ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="created_at", nullable=false)
    private Date             createdAt    ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="updated_at")
    private Date             updatedAt    ;

    //--- LINKS ( RELATIONSHIPS )
    @OneToMany(mappedBy="users")
    private List<ShoppingCarts> listOfShoppingCarts;

    @OneToMany(mappedBy="users")
    private List<StockReceipts> listOfStockReceipts;

    @OneToMany(mappedBy="users")
    private List<ProductReviews> listOfProductReviews;

    @OneToMany(mappedBy="users")
    private List<UserPhoneNumbers> listOfUserPhoneNumbers;

    @OneToMany(mappedBy="users")
    private List<Orders> listOfOrders;

    @OneToMany(mappedBy="users")
    private List<UserRoles> listOfUserRoles;

    @OneToMany(mappedBy="users")
    private List<OrderEvents> listOfOrderEvents;

    @OneToMany(mappedBy="users")
    private List<Wishlists> listOfWishlists;

    @OneToMany(mappedBy="users")
    private List<CouponRedemptions> listOfCouponRedemptions;

    @OneToMany(mappedBy="users")
    private List<Addresses> listOfAddresses;

    @OneToMany(mappedBy="users")
    private List<AuditLogs> listOfAuditLogs;

}